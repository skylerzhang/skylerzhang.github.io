---
layout: post
title:  "基于node构建命令行工具【译】"
date:   2015-1-08 23:00:00
categories: node
---

本文翻译自[Command-line utilities with Node.js](http://cruft.io/posts/node-command-line-utilities/)
本人水平有限，如有错误还请指正。

node.js 中一个经常被忽视的功能就是它可以用来创建命令行工具。这篇文章我就来示范一下用node.js创建命令行工具是一件多么简单的事情。文章里我将创建一个
基于关键词、拥有者和语言来快速搜索Github仓库的命令行工具。如果你想直接看源码，它可以在[这儿获得](https://gist.github.com/GlynnPhillips/7f3dcb2b990796f1856f)。

### 理解命令行

不管你用的是什么脚本语言，在写任何Unix命令行工具之前，最重要的就是理解它通用的输入模式。最基本的模式由三个主要部分组成：命令，选项，参数

#### 命令

命令可以分成以下三类：

1、内部命令 - 这种命令的验证和执行不依赖任何外部的可执行文件。
2、包含命令 - 这种命令的执行需要一个通常包含在系统重要部分之中的可执行文件。
3、外部命令 - 这种命令的执行需要一个外部的可执行文件，但它并不是系统自带的，而是由第三方添加的。

#### 选项

命令行的选项可以用来改变命令的运行。类Unix系统上的选项通常都带有连字符并且是用空格分隔开的。

#### 参数

当命令行运行的时候，一个参数就传递一条信息。参数经常被用来指定信息来源，或者改变命令的执行。

### 创建一个命令行工具

在我开始编写之前，我有必要指出这篇教程的编写和测试都是在类Unix系统下（OSX）。如果你想运行在其他的类Unix系统下,可能需要再做一些额外的工作。

开始编写前唯一的依赖就是node.js。你可以在命令行里运行 `which node`来查看它是否已经安装。如果你已经安装了你可能会得到一个类似下面这样的返回。如果返回是空
那么你可能没有安装node，你可以从[node.org](www.nodejs.org)下载安装包。

{% highlight linux %}
 $ which node
 /usr/local/bin/node
{% endhighlight %}

首先，创建一个名叫`gitsearch.js`的文件并且在第一行加一个[shebang]()

